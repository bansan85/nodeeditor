variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - format
#  - test
#  - install
#  - tag

format:clang-format:
  stage: format
  tags:
    - ubuntu
    - clang-format
  script:
    - find . -path ./examples/calculator_tbb/vcpkg -prune -type f -or -name "*.cpp" -or -name "*.cc" -or -name "*.hpp" -or -name "*.h" |xargs clang-format-14 --style=file --dry-run --Werror
  dependencies: []

format:cmake-format:
  stage: format
  tags:
    - ubuntu
    - cmake-format
  script:
    - find . -path ./examples/calculator_tbb/vcpkg -prune -type f -o -name "CMakeLists.txt" | xargs cmake-format -i
    - if [ -n "$(git diff-index --name-only HEAD --)" ]; then echo "Please, format your CMake files."; echo "$(git diff-index --name-only HEAD --)"; exit 1; fi
  dependencies: []

#format:clang-tidy:
#  stage: format
#  tags:
#    - ubuntu
#  script:
#    - cd CI
#    - run-clang-tidy || exit 1
#  dependencies:
#    - build:ubuntu-static
#
#format:iwyu:
#  stage: format
#  tags:
#    - ubuntu
#  script:
#    - cd CI
#    - iwyu_tool.py -p . -j $NUM_PARALLEL -- -Xiwyu --no_default_mappings -Xiwyu --mapping_file="$(pwd)/../.iwyu-imp" -Xiwyu --no_fwd_decls > iwyu_tool.log
#    - fix_includes.py --nosafe_headers < iwyu_tool.log
#    - if [[ `git status --porcelain` ]]; then exit 1; fi
#  dependencies:
#    - build:ubuntu-static
#  allow_failure: true
#  artifacts:
#    when: on_failure
#    paths:
#      - CI/iwyu_tool.log
#    expire_in: 1 day

#build:windows-python:
#  stage: build
#  tags:
#    - win10
#    - python 
#  script:
#    - pew in CI python -m build .
#
#build:ubuntu-python:
#  stage: build
#  tags:
#    - ubuntu
#    - python 
#  script:
#    - pew in CI python -m build .
#
#build:windows-static:
#  stage: build
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DEigen3_DIR:PATH=${Eigen3_DIR_2022_64_STATIC_RELEASE} -DCatch2_DIR:PATH=${Catch2_DIR_2022_64_STATIC_RELEASE} -DWITH_SAMPLES=ON -DWITH_CUDA=ON -DWITH_TEST=ON
#    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#build:windows-shared:
#  stage: build
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DEigen3_DIR:PATH=${Eigen3_DIR_2022_64_SHARED_RELEASE} -DCatch2_DIR:PATH=${Catch2_DIR_2022_64_SHARED_RELEASE} -DWITH_SAMPLES=ON -DWITH_CUDA=ON -DWITH_TEST=ON
#    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day

build:ubuntu-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DCMAKE_TOOLCHAIN_FILE:PATHFILE=${VCPKG_TOOLCHAIN}
    - cmake --build CI --config Release --parallel $NUM_PARALLEL
  artifacts:
    paths:
      - CI
    expire_in: 1 day

#build:ubuntu-shared:
#  stage: build
#  tags:
#    - ubuntu
#    - build
#  script:
#    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DEigen3_DIR:PATH=${Eigen3_DIR_GCC_64_SHARED_RELEASE} -DCatch2_DIR:PATH=${Catch2_DIR_GCC_64_SHARED_RELEASE} -DWITH_SAMPLES=ON -DWITH_CUDA=ON -DWITH_TEST=ON
#    - cmake --build CI --config Release --parallel $NUM_PARALLEL
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#build:android-ubuntu-static:
#  stage: build
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
#    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DOpenCL_LIBRARY=$DIR_ARM_V8A_64_STATIC_RELEASE/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR:PATH=$DIR_ARM_V8A_64_STATIC_RELEASE/include -DWITH_TEST:BOOL=OFF -DWITH_SAMPLES:BOOL=OFF
#    - cmake --build CI --config Release --parallel $NUM_PARALLEL
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#build:android-ubuntu-shared:
#  stage: build
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - export ANDROID_NDK_PATH="$ALL_NDK_PATH"/21.4.7075529
#    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_SYSTEM_NAME=Android -DCMAKE_SYSTEM_VERSION=28 -DCMAKE_ANDROID_ARCH_ABI=arm64-v8a -DCMAKE_ANDROID_NDK="$ANDROID_NDK_PATH" -DCMAKE_ANDROID_STL_TYPE=c++_static -DCMAKE_INSTALL_PREFIX="$ANDROID_INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DOpenCL_LIBRARY=$DIR_ARM_V8A_64_SHARED_RELEASE/lib/libOpenCL.so -DOpenCL_INCLUDE_DIR:PATH=$DIR_ARM_V8A_64_SHARED_RELEASE/include -DWITH_TEST:BOOL=OFF -DWITH_SAMPLES:BOOL=OFF
#    - cmake --build CI --config Release --parallel $NUM_PARALLEL
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:windows-static:
#  stage: test
#  dependencies:
#    - build:windows-static
#  tags:
#    - win10
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:windows-shared:
#  stage: test
#  dependencies:
#    - build:windows-shared
#  tags:
#    - win10
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:ubuntu-static:
#  stage: test
#  dependencies:
#    - build:ubuntu-static
#  tags:
#    - ubuntu
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:ubuntu-shared:
#  stage: test
#  dependencies:
#    - build:ubuntu-shared
#  tags:
#    - ubuntu
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#install:windows-static:
#  stage: install
#  dependencies:
#    - build:windows-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe --install CI --config Release
#
#install:windows-shared:
#  stage: install
#  dependencies:
#    - build:windows-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe --install CI --config Release
#
#install:ubuntu-static:
#  stage: install
#  dependencies:
#    - build:ubuntu-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#install:ubuntu-shared:
#  stage: install
#  dependencies:
#    - build:ubuntu-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#  artifacts:
#    paths:
#      - CI/version.txt
#    expire_in: 1 day
#
#install:android-ubuntu-static:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#install:android-ubuntu-shared:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#tag-version:
#  stage: tag
#  dependencies:
#    - install:ubuntu-shared
#  rules:
#    - if: $CI_COMMIT_TAG
#      when: never
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  script:
#    - git tag -f $(cat CI/version.txt)
#    - git push -f --tags
#  tags:
#    - ubuntu
#    - build
#