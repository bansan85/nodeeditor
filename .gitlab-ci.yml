variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - format
#  - test
#  - install
#  - tag

format:clang-format:
  stage: format
  tags:
    - ubuntu
    - clang-format
  script:
    - find . -type f -name "*.cpp" -or -name "*.cc" -or -name "*.hpp" -or -name "*.h" |xargs clang-format-17 --style=file --dry-run --Werror
  dependencies: []

format:cmake-format:
  stage: format
  tags:
    - ubuntu
    - cmake-format
  script:
    - find . -name "CMakeLists.txt" | xargs cmake-format -i
    - if [ -n "$(git diff-index --name-only HEAD --)" ]; then echo "Please, format your CMake files."; echo "$(git diff-index --name-only HEAD --)"; exit 1; fi
  dependencies: []

#format:clang-tidy:
#  stage: format
#  tags:
#    - ubuntu
#  script:
#    - cd CI
#    - run-clang-tidy || exit 1
#  dependencies:
#    - build:ubuntu-static

format:iwyu:
  stage: format
  tags:
    - ubuntu
    - iwyu
  script:
    - cd CI
    - perl -0777 -i.original -pe 's/,\n\{\n.*\n.*moc.*\.cpp",\n.*moc.*\.cpp"\n\}//g' compile_commands.json
    - perl -0777 -i.original -pe 's/\{\n.*\n.*moc.*\.cpp",\n.*moc.*\.cpp"\n\},\n//g' compile_commands.json
    - perl -0777 -i.original -pe 's/,\n\{\n.*\n.*qmlcache.*\.cpp",\n.*qmlcache.*\.cpp"\n\}//g' compile_commands.json
    - perl -0777 -i.original -pe 's/\{\n.*\n.*qmlcache.*\.cpp",\n.*qmlcache.*\.cpp"\n\},\n//g' compile_commands.json
    - perl -0777 -i.original -pe 's/,\n\{\n.*\n.*qmltyperegistrations.*\.cpp",\n.*qmltyperegistrations.*\.cpp"\n\}//g' compile_commands.json
    - perl -0777 -i.original -pe 's/\{\n.*\n.*qmltyperegistrations.*\.cpp",\n.*qmltyperegistrations.*\.cpp"\n\},\n//g' compile_commands.json
    - iwyu_tool.py -p . -j $NUM_PARALLEL -- -Xiwyu --mapping_file="$(pwd)/../.iwyu-imp" -Xiwyu --mapping_file="$(pwd)/../.stl.c.headers.imp" -Xiwyu --no_fwd_decls > iwyu_tool.log
    - fix_includes.py --nosafe_headers < iwyu_tool.log
    - if [[ `git status --porcelain` ]]; then exit 1; fi
  dependencies:
    - build:ubuntu-static
  allow_failure: true
  artifacts:
    when: on_failure
    paths:
      - CI/iwyu_tool.log
    expire_in: 1 day

build:windows-static:
  stage: build
  tags:
    - win10
    - build
  before_script:
    - rm d:/vcpkg -r -Force
  script:
    - git clone --depth 1 --branch pfrd_gui https://git.moduleus.com/common/sw/3rdparty/vcpkg.git d:/vcpkg
    - $vcpkg_tag = (Get-Content d:/vcpkg\scripts\vcpkg-tool-metadata.txt) | Select-String -Pattern '^VCPKG_TOOL_RELEASE_TAG=(.*)'  | %{$_.Matches.Groups[1].value}
    - $url="https://github.com/microsoft/vcpkg-tool/releases/download/$vcpkg_tag/vcpkg.exe"
    - $destination="$Env:VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag.exe"
    - $destination
    - if(-not(Test-Path $destination)){Invoke-WebRequest -Uri $url -OutFile $destination}
    - Copy-Item $destination d:/vcpkg/vcpkg.exe
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DCMAKE_TOOLCHAIN_FILE:PATHFILE="d:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows-static-md -DVCPKG_HOST_TRIPLET=x64-windows-static-md -DVCPKG_INSTALLED_DIR=d:/vcpkg_installed
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL

build:windows-shared:
  stage: build
  tags:
    - win10
    - build
  before_script:
    - rm d:/vcpkg -r -Force
  script:
    - git clone --depth 1 --branch pfrd_gui https://git.moduleus.com/common/sw/3rdparty/vcpkg.git d:/vcpkg
    - $vcpkg_tag = (Get-Content d:/vcpkg\scripts\vcpkg-tool-metadata.txt) | Select-String -Pattern '^VCPKG_TOOL_RELEASE_TAG=(.*)'  | %{$_.Matches.Groups[1].value}
    - $url="https://github.com/microsoft/vcpkg-tool/releases/download/$vcpkg_tag/vcpkg.exe"
    - $destination="$Env:VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag.exe"
    - $destination
    - if(-not(Test-Path $destination)){Invoke-WebRequest -Uri $url -OutFile $destination}
    - Copy-Item $destination d:/vcpkg/vcpkg.exe
    - cmake.exe -S . -B CI -G "Visual Studio 17 2022" -A x64 -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE:PATHFILE="d:/vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-windows -DVCPKG_HOST_TRIPLET=x64-windows -DVCPKG_INSTALLED_DIR=d:/vcpkg_installed
    - cmake.exe --build CI --config Release -- /p:CL_MPcount=$NUM_PARALLEL

build:ubuntu-static:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - git clone --depth 1 --branch pfrd_gui https://git.moduleus.com/common/sw/3rdparty/vcpkg.git
    - vcpkg_tag=$(sed -n 's/^VCPKG_TOOL_RELEASE_TAG=\(.*\)/\1/p' < vcpkg/scripts/vcpkg-tool-metadata.txt)
    - if [ ! -f "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag" ]; then wget -O "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag" "https://github.com/microsoft/vcpkg-tool/releases/download/$vcpkg_tag/vcpkg-glibc" || exit 1; chmod +x "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag"; fi
    - cp $VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag vcpkg/vcpkg || exit 1
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=OFF -DCMAKE_TOOLCHAIN_FILE:PATHFILE="vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-linux -DVCPKG_HOST_TRIPLET=x64-linux
    - cmake --build CI --config Release --parallel $NUM_PARALLEL

build:ubuntu-shared:
  stage: build
  tags:
    - ubuntu
    - build
  script:
    - git clone --depth 1 --branch pfrd_gui https://git.moduleus.com/common/sw/3rdparty/vcpkg.git
    - vcpkg_tag=$(sed -n 's/^VCPKG_TOOL_RELEASE_TAG=\(.*\)/\1/p' < vcpkg/scripts/vcpkg-tool-metadata.txt)
    - if [ ! -f "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag" ]; then wget -O "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag" "https://github.com/microsoft/vcpkg-tool/releases/download/$vcpkg_tag/vcpkg-glibc" || exit 1; chmod +x "$VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag"; fi
    - cp $VCPKG_CACHE_PATH/vcpkg-$vcpkg_tag vcpkg/vcpkg || exit 1
    - cmake -S . -B CI -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$INSTALL_PREFIX" -DBUILD_SHARED_LIBS=ON -DCMAKE_TOOLCHAIN_FILE:PATHFILE="vcpkg/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=x64-linux-dynamic -DVCPKG_HOST_TRIPLET=x64-linux-dynamic
    - cmake --build CI --config Release --parallel $NUM_PARALLEL

#test:windows-static:
#  stage: test
#  dependencies:
#    - build:windows-static
#  tags:
#    - win10
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:windows-shared:
#  stage: test
#  dependencies:
#    - build:windows-shared
#  tags:
#    - win10
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:ubuntu-static:
#  stage: test
#  dependencies:
#    - build:ubuntu-static
#  tags:
#    - ubuntu
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#test:ubuntu-shared:
#  stage: test
#  dependencies:
#    - build:ubuntu-shared
#  tags:
#    - ubuntu
#    - test
#  script:
#    - cd CI
#    - ctest --output-on-failure -C Release
#  allow_failure: true
#  artifacts:
#    paths:
#      - CI
#    expire_in: 1 day
#
#install:windows-static:
#  stage: install
#  dependencies:
#    - build:windows-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe --install CI --config Release
#
#install:windows-shared:
#  stage: install
#  dependencies:
#    - build:windows-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - win10
#    - build
#  script:
#    - cmake.exe --install CI --config Release
#
#install:ubuntu-static:
#  stage: install
#  dependencies:
#    - build:ubuntu-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#install:ubuntu-shared:
#  stage: install
#  dependencies:
#    - build:ubuntu-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#  artifacts:
#    paths:
#      - CI/version.txt
#    expire_in: 1 day
#
#install:android-ubuntu-static:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-static
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#install:android-ubuntu-shared:
#  stage: install
#  dependencies:
#    - build:android-ubuntu-shared
##    - format:clang-format
##    - format:cmake-format
##    - format:clang-tidy
#  tags:
#    - android
#    - ubuntu
#    - build
#  script:
#    - cmake --install CI --config Release
#
#tag-version:
#  stage: tag
#  dependencies:
#    - install:ubuntu-shared
#  rules:
#    - if: $CI_COMMIT_TAG
#      when: never
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#  script:
#    - git tag -f $(cat CI/version.txt)
#    - git push -f --tags
#  tags:
#    - ubuntu
#    - build
#